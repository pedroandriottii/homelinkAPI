generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  GENERATING
  SENT
  APPROVED
  NEGOTIATING
  REPROVED
}

enum Color {
  BLACK
  WHITE
}

enum Role {
  ADMIN
  USER
  CLIENT
}

model User {
  id             String  @id @default(uuid())
  email          String  @unique
  password       String
  phone          String  @unique
  name           String
  amazonMail     String?
  amazonPassword String?
  role           Role

  orders CustomerOrder[]
}

model CustomerOrder {
  id              String    @id @default(uuid())
  startDate       DateTime  @default(now())
  totalValue      Float
  status          Status
  maxDate         DateTime?
  assuranceDate   DateTime?
  sentDate        DateTime?
  negotiatingDate DateTime?
  reprovedDate    DateTime?
  approvedDate    DateTime?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?
  rooms  Room[]
}

model Product {
  id            Int       @id @default(autoincrement())
  name          String
  color         Color
  videoUrl      String?
  brand         String?
  assuranceDate DateTime?
  category      Category  @relation(fields: [categoryId], references: [id])
  categoryId    Int

  rooms RoomProduct[]
}

model Room {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  photoUrl    String?
  totalValue  Float

  order    CustomerOrder @relation(fields: [orderId], references: [id])
  orderId  String
  products RoomProduct[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String

  products Product[]
}

model RoomProduct {
  productId       Int
  roomId          Int
  productCost     Float
  quantity        Int
  eletricianCost  Float
  instalationCost Float
  materialCost    Float
  maxDate         DateTime
  totalValue      Float

  product Product @relation(fields: [productId], references: [id])
  room    Room    @relation(fields: [roomId], references: [id])

  @@id([productId, roomId])
}
